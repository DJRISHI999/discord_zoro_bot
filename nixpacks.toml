[phases.setup]
nixPkgs = [
  'ffmpeg',
  'nodejs_20', # Provides the 'corepack' command itself
  'pnpm',      # Explicitly install pnpm via Nix
  'pkg-config', # Required by canvas
  'cairo',      # Required by canvas
  'pango',      # Required by canvas
  'libjpeg',    # Required by canvas
  'giflib',     # Required by canvas
  'librsvg',    # Required by canvas
  'python3',    # For node-gyp
  'gcc',        # For node-gyp / C++ compilation
  'binutils'    # For ldd
]

[phases.install]
cmds = [
  'pnpm install --frozen-lockfile',
  'echo "Attempting to rebuild canvas"', # Added for logging
  'pnpm rebuild canvas',
  'echo "Listing contents of canvas build directory: /app/node_modules/.pnpm/canvas@3.1.0/node_modules/canvas/build/Release/"',
  'ls -la /app/node_modules/.pnpm/canvas@3.1.0/node_modules/canvas/build/Release/ || echo "Failed to list canvas build directory"',
  'echo "Running ldd on /app/node_modules/.pnpm/canvas@3.1.0/node_modules/canvas/build/Release/canvas.node"',
  'ldd /app/node_modules/.pnpm/canvas@3.1.0/node_modules/canvas/build/Release/canvas.node || echo "ldd command failed or canvas.node not found"'
]

[phases.start]
# Assuming your package.json has "scripts": { "start": "node bot.js" }
# If not, Nixpacks will likely try 'node bot.js' or similar based on main field.
cmd = 'pnpm start'